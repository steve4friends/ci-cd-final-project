---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: clenup
spec:
  workspaces:
    - name: source
  params:
    - name: args
      description: Arguments to pass to nose
      type: string
      default: -v
  steps:
    - name: remove
      image: alpine:3
      env:
        - name: WORKSPACE_SOURCE_PATH
          value: $(workspaces.source.path)
      workingDir: $(workspaces.source.path)
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      script: |
        #!/usr/bin/env sh
          set -eu
          echo "Rimozione di tutti i file da ${WORKSPACE_SOURCE_PATH} ..."
          # Elimina eventuali contenuti esistenti della directory se esiste.
          #
          # Non usiamo semplicemente "rm -rf ${WORKSPACE_SOURCE_PATH}" perché ${WORKSPACE_SOURCE_PATH} potrebbe essere "/"
          # o la radice di un volume montato.
          if [ -d "${WORKSPACE_SOURCE_PATH}" ] ; then
            # Elimina file e directory non nascosti
            rm -rf "${WORKSPACE_SOURCE_PATH:?}"/*
            # Elimina file e directory che iniziano con . ma escludendo ..
            rm -rf "${WORKSPACE_SOURCE_PATH}"/.[!.]*
            # Elimina file e directory che iniziano con .. più qualsiasi altro carattere
            rm -rf "${WORKSPACE_SOURCE_PATH}"/..?*
          fi

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: nose
spec:
  workspaces:
    - name: source
  params:
    - name: args
      description: Arguments to pass to nose
      type: string
      default: -v
  steps:
    - name: nosetests
      image: python:3.9-slim
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        set -e  # Exit immediately if a command exits with a non-zero status.

        echo "Installing pip and wheel..."
        python -m pip install --upgrade pip wheel

        echo "Installing dependencies from requirements.txt..."
        pip install -r requirements.txt

        echo "Running unit tests with nose..."
        nosetests $(params.args)
